# yaml-language-server: https://raw.githubusercontent.com/SchemaStore/schemastore/master/src/schemas/json/github-workflow.json
---
name: release
on:
  create:
    tags:
      - "v*.*.*"
permissions:
  contents: write
  packages: write
  actions: write

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: stable
      - name: Run tests
        run: go test ./...
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          distribution: goreleaser
          version: ${{ env.GITHUB_REF_NAME }}
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.PUBLISH_TOKEN }}

  container:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Extract versions
        id: extract
        run: |
          FULL_TAG="${GITHUB_REF#refs/tags/}"
          VERSION_NO_V="${FULL_TAG#v}"
          MAJOR_PART="${VERSION_NO_V%%.*}"
          MAJOR_TAG="v${MAJOR_PART}"
          echo "full_version=${FULL_TAG}"   >> $GITHUB_OUTPUT
          echo "major_version=${MAJOR_TAG}" >> $GITHUB_OUTPUT
        shell: bash
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: https://ghcr.io
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build Image
        uses: docker/build-push-action@v6
        with:
          file: ./Dockerfile
          push: true
          tags: ghcr.io/tsukinoko-kun/ohmygosh:latest,ghcr.io/tsukinoko-kun/ohmygosh:${{steps.extract.outputs.major_version}},ghcr.io/tsukinoko-kun/ohmygosh:${{steps.extract.outputs.full_version}}
          platforms: linux/amd64,linux/arm64
          build-args: VERSION=${{steps.extract.outputs.full_version}}
